# Generated by Django 4.0.5 on 2022-06-15 08:58

import ckeditor.fields
import colorfield.fields
from django.db import migrations, models
import django.db.models.deletion
import product.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='products', verbose_name='Картинка')),
                ('image2', models.ImageField(upload_to='products', verbose_name='Картинка')),
                ('image3', models.ImageField(upload_to='products', verbose_name='Картинка')),
            ],
            options={
                'verbose_name_plural': 'О нас',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('image', models.ImageField(upload_to='products', verbose_name='Картинка')),
            ],
            options={
                'verbose_name_plural': 'Категория',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Contacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=30, verbose_name='Ввод данных')),
                ('instagram', models.CharField(blank=True, max_length=100, null=True, verbose_name='Инстаграм')),
                ('whatsapp', models.CharField(blank=True, max_length=30, null=True, verbose_name='Ватсапп')),
                ('telegram', models.CharField(blank=True, max_length=30, null=True, verbose_name='Телеграм')),
                ('mail', models.CharField(blank=True, max_length=50, null=True, verbose_name='Почта')),
                ('num', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер')),
            ],
            options={
                'verbose_name_plural': 'Контакты',
            },
        ),
        migrations.CreateModel(
            name='FloatingButton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('whatsapp', models.CharField(blank=True, editable=False, max_length=30, null=True, verbose_name='Ватсапп')),
                ('telegram', models.CharField(blank=True, editable=False, max_length=30, null=True, verbose_name='Телеграм')),
                ('name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Имя')),
                ('number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер телефона')),
                ('type', models.CharField(blank=True, choices=[('YES', 'Да'), ('NO', 'Нет')], default='NO', max_length=30, null=True, verbose_name='Тип обращения(обратный звонок)')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name_plural': 'Обратный звонок',
            },
        ),
        migrations.CreateModel(
            name='Footer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('info', models.TextField(max_length=200, verbose_name='Информация')),
                ('header_image', models.ImageField(blank=True, null=True, upload_to='products', verbose_name='Логотип Футера')),
                ('footer_Image', models.ImageField(blank=True, null=True, upload_to='products', verbose_name='Логотип Хедера')),
                ('header_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Номер в хедере')),
            ],
            options={
                'verbose_name_plural': 'Футер и хедер',
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(db_index=True, max_length=200, verbose_name='Вопросы')),
                ('answer', models.TextField(db_index=True, max_length=200, verbose_name='Ответы')),
            ],
            options={
                'verbose_name_plural': 'Помощь',
            },
        ),
        migrations.CreateModel(
            name='Help_image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_help', models.ImageField(blank=True, upload_to='products', verbose_name='Картинки')),
            ],
            options={
                'verbose_name_plural': 'Картинка для помощи',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_news', models.ImageField(blank=True, upload_to='products', verbose_name='Картинка')),
                ('header', models.CharField(blank=True, max_length=200, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Новости',
            },
        ),
        migrations.CreateModel(
            name='OurAdvantages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, upload_to='products', verbose_name='Картинка')),
            ],
            options={
                'verbose_name_plural': 'Наши преимущества',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('artikul', models.CharField(max_length=200, verbose_name='Артикул')),
                ('price', models.IntegerField(blank=True, default=True, null=True, verbose_name='Цена')),
                ('old_price', models.IntegerField(default=True, verbose_name='Старая цена')),
                ('discount', models.PositiveIntegerField(default=0, null=True, verbose_name='Скидки')),
                ('description', ckeditor.fields.RichTextField(verbose_name='Описание')),
                ('size_range', models.CharField(max_length=100, verbose_name='Размерный ряд')),
                ('composition', models.CharField(max_length=100, verbose_name='Состав ткани')),
                ('stock', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Количество в линейке')),
                ('material', models.CharField(max_length=100, verbose_name='Материал')),
                ('bestseller', models.BooleanField(default=True, verbose_name='Хит продаж')),
                ('novelties', models.BooleanField(default=True, verbose_name='Новинки')),
                ('favorites', models.BooleanField(default=False)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.category', verbose_name='Категории')),
            ],
            options={
                'verbose_name_plural': 'Продукт',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PublicOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Заголовок')),
                ('description', ckeditor.fields.RichTextField(null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name_plural': 'Публичная офферта',
            },
        ),
        migrations.CreateModel(
            name='Slider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products', verbose_name='Картинка')),
                ('link', models.URLField(blank=True, max_length=150, null=True, verbose_name='Ссылка')),
            ],
            options={
                'verbose_name_plural': 'Слайдер',
            },
        ),
        migrations.CreateModel(
            name='ProductItemImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products', validators=[product.models.validate_even])),
                ('rgbcolor', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=18, samples=None, verbose_name='Выбор цветов')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_item_image', to='product.product')),
            ],
            options={
                'verbose_name_plural': 'Картинка продукта',
            },
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size_range', models.CharField(blank=True, max_length=100, null=True, verbose_name='Размерный ряд')),
                ('quantity_in_line', models.IntegerField(blank=True, null=True, verbose_name='Количество в линейке')),
                ('Product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_size', to='product.product')),
            ],
        ),
    ]
